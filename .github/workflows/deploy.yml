name: Backend CD

on:
  push:
    branches: [ prod ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
      
    services:
        postgres:
          image: postgres:10.8
          env:
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: yourpass
            POSTGRES_DB: mydbname
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Copy .env.example to .env
      run: cp .env.example .env
    - name: Run makemigrations
      run: python manage.py makemigrations
    - name: Run migrate
      run: python manage.py migrate
    - name: Run check
      run: python manage.py check      
    - name: Running remote SSH commands
      uses: JimCronqvist/action-ssh@master
      with:
        hosts: ${{ secrets.HOST }}
        privatekey: ${{ secrets.SSHKEY }}
        command: |
                cd ~/www/glug_website_backend
                git checkout prod
                git pull origin prod
                source ../env/bin/activate
                pip install -U -r requirements.txt
                python manage.py makemigrations
                python manage.py migrate --run-syncdb
                python manage.py collectstatic --noinput
                sudo systemctl restart website-backend.service
                deactivate
                cd ~
                sudo systemctl restart nginx